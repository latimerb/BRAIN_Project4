{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[12]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}
{
ocbox_ = new HBox()
ocbox_list_.prepend(ocbox_)
ocbox_.intercept(1)
}
{
ocbox_ = new VBox()
ocbox_list_.prepend(ocbox_)
ocbox_.intercept(1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-2,2)
scene_vector_[2] = save_window_
{save_window_.view(0, -2, 300, 4, 0, 1195, 324.9, 293)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("CellA.soma.i_cadyn(.5)", 2, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "i_cadyn Current (mA/cm2)", 2, 1, 0, 0, 1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-2,2)
scene_vector_[3] = save_window_
{save_window_.view(0, -2, 300, 4, 0, 1195, 324.9, 293)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("CellA.soma.i_hd(.5)", 2, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "i_hd Current (mA/cm2)", 2, 1, 0, 0, 1)
}
{
ocbox_ = ocbox_list_.object(0)
ocbox_.intercept(0)
ocbox_.map()
}
objref ocbox_
{
ocbox_ = new VBox()
ocbox_list_.prepend(ocbox_)
ocbox_.intercept(1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-2,2)
scene_vector_[4] = save_window_
{save_window_.view(0, -2, 300, 4, 0, 1195, 324.9, 293)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("CellA.soma.i_nap(.5)", 2, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "i_nap Current (mA/cm2)", 2, 1, 0, 0, 1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-2,2)
scene_vector_[5] = save_window_
{save_window_.view(0, -2, 300, 4, 0, 1195, 324.9, 293)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("CellA.soma.i_kdr(.5)", 2, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "i_kdr Current (mA/cm2)", 2, 1, 0, 0, 1)
}
{
ocbox_ = ocbox_list_.object(0)
ocbox_.intercept(0)
ocbox_.map()
}
objref ocbox_
{
ocbox_ = new VBox()
ocbox_list_.prepend(ocbox_)
ocbox_.intercept(1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-2,2)
scene_vector_[6] = save_window_
{save_window_.view(0, -2, 300, 4, 0, 1195, 324.9, 194.133)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("CellA.soma.i_sAHP(.5)", 2, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "i_sAHP Current (mA/cm2)", 2, 1, 0, 0, 1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-2,2)
scene_vector_[7] = save_window_
{save_window_.view(0, -2, 300, 4, 0, 1195, 324.9, 194.133)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("CellA.soma.i_im(.5)", 2, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "i_im Current (mA/cm2)", 2, 1, 0, 0, 1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-2,2)
scene_vector_[8] = save_window_
{save_window_.view(0, -2, 300, 4, 0, 1195, 324.9, 194.133)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addexpr("CellA.soma.i_kap(.5)", 2, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "i_kap Current (mA/cm2)", 2, 1, 0, 0, 1)
}
{
ocbox_ = ocbox_list_.object(0)
ocbox_.intercept(0)
ocbox_.map()
}
objref ocbox_
{
ocbox_ = ocbox_list_.object(0)
ocbox_.intercept(0)
ocbox_.map("Nair Lab - University of Missouri - Single Neuron Modeling (Banks)", 0, 1195, 1014.3, 654.3)
}
objref ocbox_
{
ocbox_ = new HBox()
ocbox_list_.prepend(ocbox_)
ocbox_.intercept(1)
}
{
ocbox_ = new VBox()
ocbox_list_.prepend(ocbox_)
ocbox_.intercept(1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-80,60)
scene_vector_[9] = save_window_
{save_window_.view(0, -80, 300, 140, 342, 55, 353.593, 194.133)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("CellA.soma.v(.5)", 3, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "CellA Voltage (mV)", 2, 1, 0, 0, 1)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-80,40)
scene_vector_[10] = save_window_
{save_window_.view(0, -80, 300, 120, 342, 55, 353.593, 194.133)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addvar("CellA.axon[10].v( 0.5 )", 2, 1, 0.08, 0.925, 2)
save_window_.addexpr("CellA.axon[0].v( 0.5 )", 3, 1, 0.08, 0.925, 2)
save_window_.addexpr("CellA.axon[5].v( 0.5 )", 4, 1, 0.08, 0.925, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,300,-80,60)
scene_vector_[11] = save_window_
{save_window_.view(0, -80, 300, 140, 342, 55, 353.593, 194.133)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("CellA.apical.v(.5)", 3, 1, 0.8, 0.9, 2)
save_window_.label(0.08, 0.925, "CellA Voltage (mV)", 2, 1, 0, 0, 1)
}
{
ocbox_ = ocbox_list_.object(0)
ocbox_.intercept(0)
ocbox_.map()
}
objref ocbox_
{
ocbox_ = new VBox()
ocbox_list_.prepend(ocbox_)
ocbox_.intercept(1)
}
{
xpanel("pyrtypec[0].soma[0](0.5) (Parameters)", 0)
xlabel("pyrtypec[0].soma[0](0.5) (Parameters)")
pyrtypec[0].soma[0].diam(0.5) = 24.75
xvalue("diam","pyrtypec[0].soma[0].diam(0.5)", 1,"pyrtypec[0].soma[0].Ra += 0", 0, 1 )
pyrtypec[0].soma[0].cm(0.5) = 1
xvalue("cm","pyrtypec[0].soma[0].cm(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].gcabar_cadyn(0.5) = 0.00055
xvalue("gcabar_cadyn","pyrtypec[0].soma[0].gcabar_cadyn(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].glbar_leak(0.5) = 2.5e-005
xvalue("glbar_leak","pyrtypec[0].soma[0].glbar_leak(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].el_leak(0.5) = -72
xvalue("el_leak","pyrtypec[0].soma[0].el_leak(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].ghdbar_hd(0.5) = 1.5e-005
xvalue("ghdbar_hd","pyrtypec[0].soma[0].ghdbar_hd(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].gbar_na3(0.5) = 0.045
xvalue("gbar_na3","pyrtypec[0].soma[0].gbar_na3(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].ar2_na3(0.5) = 1
xvalue("ar2_na3","pyrtypec[0].soma[0].ar2_na3(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].gbar_nap(0.5) = 0.000555
xvalue("gbar_nap","pyrtypec[0].soma[0].gbar_nap(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].ena(0.5) = 45
xvalue("ena","pyrtypec[0].soma[0].ena(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].gbar_kdr(0.5) = 0.002
xvalue("gbar_kdr","pyrtypec[0].soma[0].gbar_kdr(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].taucas_capool(0.5) = 1000
xvalue("taucas_capool","pyrtypec[0].soma[0].taucas_capool(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].cainf_capool(0.5) = 5e-005
xvalue("cainf_capool","pyrtypec[0].soma[0].cainf_capool(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].fcas_capool(0.5) = 0.05
xvalue("fcas_capool","pyrtypec[0].soma[0].fcas_capool(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].eca(0.5) = 120
xvalue("eca","pyrtypec[0].soma[0].eca(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].gsAHPbar_sAHP(0.5) = 0.05
xvalue("gsAHPbar_sAHP","pyrtypec[0].soma[0].gsAHPbar_sAHP(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].gbar_im(0.5) = 0.00224
xvalue("gbar_im","pyrtypec[0].soma[0].gbar_im(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].gkabar_kap(0.5) = 0.002
xvalue("gkabar_kap","pyrtypec[0].soma[0].gkabar_kap(0.5)", 1,"", 0, 1 )
pyrtypec[0].soma[0].ek(0.5) = -80
xvalue("ek","pyrtypec[0].soma[0].ek(0.5)", 1,"", 0, 1 )
xpanel()
}
{
xpanel("pyrtypec[0].axon[0](0.5) (Parameters)", 0)
xlabel("pyrtypec[0].axon[0](0.5) (Parameters)")
pyrtypec[0].axon[0].diam(0.5) = 3.1
xvalue("diam","pyrtypec[0].axon[0].diam(0.5)", 1,"pyrtypec[0].axon[0].Ra += 0", 0, 1 )
pyrtypec[0].axon[0].cm(0.5) = 0.8
xvalue("cm","pyrtypec[0].axon[0].cm(0.5)", 1,"", 0, 1 )
pyrtypec[0].axon[0].g_pas(0.5) = 3.3333e-005
xvalue("g_pas","pyrtypec[0].axon[0].g_pas(0.5)", 1,"", 0, 1 )
pyrtypec[0].axon[0].e_pas(0.5) = -70
xvalue("e_pas","pyrtypec[0].axon[0].e_pas(0.5)", 1,"", 0, 1 )
pyrtypec[0].axon[0].gbar_na12(0.5) = 0
xvalue("gbar_na12","pyrtypec[0].axon[0].gbar_na12(0.5)", 1,"", 0, 1 )
pyrtypec[0].axon[0].gbar_na16(0.5) = 0
xvalue("gbar_na16","pyrtypec[0].axon[0].gbar_na16(0.5)", 1,"", 0, 1 )
pyrtypec[0].axon[0].ena(0.5) = 45
xvalue("ena","pyrtypec[0].axon[0].ena(0.5)", 1,"", 0, 1 )
pyrtypec[0].axon[0].gbar_kv(0.5) = 0
xvalue("gbar_kv","pyrtypec[0].axon[0].gbar_kv(0.5)", 1,"", 0, 1 )
pyrtypec[0].axon[0].ek(0.5) = -80
xvalue("ek","pyrtypec[0].axon[0].ek(0.5)", 1,"", 0, 1 )
xpanel()
}
{
ocbox_ = ocbox_list_.object(0)
ocbox_.intercept(0)
ocbox_.map()
}
objref ocbox_
{
ocbox_ = new VBox()
ocbox_list_.prepend(ocbox_)
ocbox_.intercept(1)
}
{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 300
xvalue("t","t", 2 )
tstop = 300
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 1.98
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel()
}
{
xpanel("NetStim[0]", 0)
xlabel("NetStim[0]")
stim.interval = 4
xvalue("interval","stim.interval", 1,"", 0, 1 )
stim.number = 1
xvalue("number","stim.number", 1,"", 0, 1 )
stim.start = 100
xvalue("start","stim.start", 1,"", 0, 1 )
stim.noise = 0
xvalue("noise","stim.noise", 1,"", 0, 1 )
xpanel()
}
{
xpanel("pyrtypec[0].apical[0](0.5) (Parameters)", 0)
xlabel("pyrtypec[0].apical[0](0.5) (Parameters)")
pyrtypec[0].apical[0].diam(0.5) = 3
xvalue("diam","pyrtypec[0].apical[0].diam(0.5)", 1,"pyrtypec[0].apical[0].Ra += 0", 0, 1 )
pyrtypec[0].apical[0].cm(0.5) = 1
xvalue("cm","pyrtypec[0].apical[0].cm(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].gcabar_cadyn(0.5) = 0.00055
xvalue("gcabar_cadyn","pyrtypec[0].apical[0].gcabar_cadyn(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].glbar_leak(0.5) = 4.71e-005
xvalue("glbar_leak","pyrtypec[0].apical[0].glbar_leak(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].el_leak(0.5) = -72
xvalue("el_leak","pyrtypec[0].apical[0].el_leak(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].ghdbar_hd(0.5) = 1.5e-005
xvalue("ghdbar_hd","pyrtypec[0].apical[0].ghdbar_hd(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].gbar_na3(0.5) = 0.015
xvalue("gbar_na3","pyrtypec[0].apical[0].gbar_na3(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].ar2_na3(0.5) = 1
xvalue("ar2_na3","pyrtypec[0].apical[0].ar2_na3(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].gbar_nap(0.5) = 0
xvalue("gbar_nap","pyrtypec[0].apical[0].gbar_nap(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].ena(0.5) = 45
xvalue("ena","pyrtypec[0].apical[0].ena(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].gbar_kdr(0.5) = 0.002
xvalue("gbar_kdr","pyrtypec[0].apical[0].gbar_kdr(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].taucas_capool(0.5) = 1000
xvalue("taucas_capool","pyrtypec[0].apical[0].taucas_capool(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].cainf_capool(0.5) = 5e-005
xvalue("cainf_capool","pyrtypec[0].apical[0].cainf_capool(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].fcas_capool(0.5) = 0.05
xvalue("fcas_capool","pyrtypec[0].apical[0].fcas_capool(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].eca(0.5) = 120
xvalue("eca","pyrtypec[0].apical[0].eca(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].gsAHPbar_sAHP(0.5) = 0
xvalue("gsAHPbar_sAHP","pyrtypec[0].apical[0].gsAHPbar_sAHP(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].gbar_im(0.5) = 0
xvalue("gbar_im","pyrtypec[0].apical[0].gbar_im(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].gkabar_kap(0.5) = 0
xvalue("gkabar_kap","pyrtypec[0].apical[0].gkabar_kap(0.5)", 1,"", 0, 1 )
pyrtypec[0].apical[0].ek(0.5) = -77
xvalue("ek","pyrtypec[0].apical[0].ek(0.5)", 1,"", 0, 1 )
xpanel()
}
{
ocbox_ = ocbox_list_.object(0)
ocbox_.intercept(0)
ocbox_.map()
}
objref ocbox_
{
ocbox_ = ocbox_list_.object(0)
ocbox_.intercept(0)
ocbox_.map("Nair Lab - University of Missouri - Single Neuron Modeling (Banks)", 342, 55, 1014.3, 654.3)
}
objref ocbox_
objectvar scene_vector_[1]
{doNotify()}
